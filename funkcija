FUL DOBRA FUNKCIJA

def NarisiGraf(graf):
    razdalje = graf.distance_all_pairs()
    l = razdalje.values()
    k = []
    for i in l:
        for j in i.values():
            k = k + [j]
    pojavitve = {}
    for i in k:
        if i in pojavitve:
            pojavitve[i] += 1
        else:
            pojavitve[i] = 1
    lists = sorted(pojavitve.items())
    x, y = zip(*lists)
    plt.plot(x, y)
    plt.show()


def NarisiGrafTest(graf):
    razdalje = graf.distance_all_pairs()
    l = razdalje.values()
    k = []
    for i in l:
        for j in i.values():
            k = k + [j]
    pojavitve = {}
    for i in k:
        if i in pojavitve:
            pojavitve[i] += 1
        else:
            pojavitve[i] = 1
    lists = sorted(pojavitve.items())
    x, y = zip(*lists)
    return(x, y)
    
    
grafi = [G1, G2, G3, G4]
podatki = []
for graf in grafi:
    podatki = podatki + [NarisiGrafTest(graf)]
    
    
x1 = list(podatki[0][0])
x2 = list(podatki[1][0])
x3 = list(podatki[2][0])
x4 = list(podatki[3][0])

y1 = list(podatki[0][1])
y2 = list(podatki[1][1])
y3 = list(podatki[2][1])
y4 = list(podatki[3][1])


plt.plot(x1, y1)
plt.plot(x2, y2)
plt.plot(x3, y3)
plt.plot(x4, y4)

def PorazdelitveRazdalj(grafi):
    podatki = []
    for graf in grafi:
        podatki = podatki + [NarisiGrafTest(graf)]
    x1 = list(podatki[0][0])
    x2 = list(podatki[1][0])
    x3 = list(podatki[2][0])
    x4 = list(podatki[3][0])
    x5 = list(podatki[4][0])
    x6 = list(podatki[5][0])
    x7 = list(podatki[6][0])
    x8 = list(podatki[7][0])
    x9 = list(podatki[8][0])
    x10 = list(podatki[9][0])
    y1 = list(podatki[0][1])
    y2 = list(podatki[1][1])
    y3 = list(podatki[2][1])
    y4 = list(podatki[3][1])
    y5 = list(podatki[4][1])
    y6 = list(podatki[5][1])
    y7 = list(podatki[6][1])
    y8 = list(podatki[7][1])
    y9 = list(podatki[8][1])
    y10 = list(podatki[9][1])
    plt.plot(x1, y1)
    plt.plot(x2, y2)
    plt.plot(x3, y3)
    plt.plot(x4, y4)
    plt.plot(x5, y5)
    plt.plot(x6, y6)
    plt.plot(x7, y7)
    plt.plot(x8, y8)
    plt.plot(x9, y9)
    plt.plot(x10, y10)
    plt.legend(["Graf 1", "Graf 2", "Graf 3", "Graf 4", "Graf 5", "Graf 6", "Graf 7", "Graf 8", "Graf 9", "Graf 10"])
